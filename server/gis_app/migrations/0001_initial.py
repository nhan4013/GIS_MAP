# Generated by Django 5.2.4 on 2025-07-16 11:47

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Road",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(help_text="Road name", max_length=255)),
                ("type", models.CharField(help_text="Road type", max_length=100)),
                (
                    "goem",
                    django.contrib.gis.db.models.fields.LineStringField(
                        help_text="Geographic line of the road", srid=4326
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Road",
                "verbose_name_plural": "Roads",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="UserRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Role_name", max_length=100, unique=True
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Role description"),
                ),
            ],
            options={
                "verbose_name": "User Role",
                "verbose_name_plural": "User Roles",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="AdministrativeBoundary",
            fields=[
                (
                    "code",
                    models.CharField(
                        help_text="Mã quận/huyện (District code)",
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "address",
                    models.TextField(
                        help_text="Địa chỉ hành chính (Administrative address)"
                    ),
                ),
                (
                    "district",
                    models.CharField(
                        help_text="Tên quận/huyện (District/Ward name)", max_length=255
                    ),
                ),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.PolygonField(
                        help_text="Ranh giới địa lý của quận/huyện (Geographic boundary polygon)",
                        srid=4326,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Administrative Boundary",
                "verbose_name_plural": "Administrative Boundaries",
                "ordering": ["district"],
                "indexes": [
                    models.Index(
                        fields=["district"], name="gis_app_adm_distric_b57458_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="School",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(help_text="School name", max_length=255)),
                ("address", models.TextField(help_text="Complete school address")),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        help_text="Contact phone number",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "student_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Total number of students"
                    ),
                ),
                (
                    "teacher_count",
                    models.PositiveIntegerField(
                        default=0, help_text="Total number of teachers"
                    ),
                ),
                (
                    "school_type",
                    models.CharField(
                        choices=[
                            ("public", "Public School"),
                            ("private", "Private School"),
                            ("international", "International School"),
                        ],
                        default="public",
                        help_text="Type of school",
                        max_length=20,
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True, help_text="School website URL", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.PointField(
                        help_text="Geographic location of the school", srid=4326
                    ),
                ),
                (
                    "district_code",
                    models.ForeignKey(
                        help_text="Mã quận/huyện (Administrative district code)",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gis_app.administrativeboundary",
                    ),
                ),
            ],
            options={
                "verbose_name": "School",
                "verbose_name_plural": "Schools",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="PolicyAndActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "benchmark_score",
                    models.FloatField(help_text="Benchmark score (điểm chuẩn)"),
                ),
                (
                    "admission_method",
                    models.CharField(
                        help_text="Admission method (phương thức xét tuyển)",
                        max_length=255,
                    ),
                ),
                (
                    "tuition_fee",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Tuition fee (học phí)",
                        max_digits=12,
                    ),
                ),
                (
                    "university_pass_rate",
                    models.FloatField(
                        help_text="Annual university pass rate (tỷ lệ đậu đại học)"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "school_id",
                    models.ForeignKey(
                        help_text="Mã trường (School code)",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gis_app.school",
                    ),
                ),
            ],
            options={
                "verbose_name": "Policy and Activity",
                "verbose_name_plural": "Policies and Activities",
            },
        ),
        migrations.CreateModel(
            name="Infrastructure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        help_text="Ảnh chụp thực tế (Real photo)",
                        upload_to="infrastructure_photos",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Mô tả thêm về cơ sở vật chất (Optional description)",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "school_id",
                    models.ForeignKey(
                        help_text="Mã trường (School code)",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gis_app.school",
                    ),
                ),
            ],
            options={
                "verbose_name": "Infrastructure",
                "verbose_name_plural": "Infrastructures",
            },
        ),
        migrations.CreateModel(
            name="EnrollmentZone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Mã vùng tuyển sinh (Enrollment zone code)",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Tên vùng tuyển sinh (Enrollment zone name)",
                        max_length=255,
                    ),
                ),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.PolygonField(
                        help_text="Ranh giới vùng tuyển sinh (Enrollment zone boundary polygon)",
                        srid=4326,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "school_id",
                    models.ForeignKey(
                        help_text="Trường học tuyển sinh (Linked school)",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enrollment_zones",
                        to="gis_app.school",
                    ),
                ),
            ],
            options={
                "verbose_name": "Enrollment Zone",
                "verbose_name_plural": "Enrollment Zones",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="UserAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "username",
                    models.CharField(help_text="Username", max_length=150, unique=True),
                ),
                (
                    "password_hash",
                    models.CharField(help_text="Password hash", max_length=255),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "role",
                    models.ForeignKey(
                        help_text="User role",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gis_app.userrole",
                    ),
                ),
            ],
            options={
                "verbose_name": "User Account",
                "verbose_name_plural": "User Accounts",
                "ordering": ["username"],
            },
        ),
        migrations.AddIndex(
            model_name="school",
            index=models.Index(
                fields=["school_type"], name="gis_app_sch_school__207e0f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="school",
            index=models.Index(
                fields=["district_code"], name="gis_app_sch_distric_b2e688_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="enrollmentzone",
            index=models.Index(fields=["code"], name="gis_app_enr_code_c78c5e_idx"),
        ),
    ]
